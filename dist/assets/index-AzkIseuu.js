(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&e(i)}).observe(document,{childList:!0,subtree:!0});function r(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function e(s){if(s.ep)return;s.ep=!0;const o=r(s);fetch(s.href,o)}})();let D=class{constructor(){this.dailyPuzzle=null,this.lastPlayedDate=null,this.keyboardState={},this.wordSets={easy:[{letters:"STARLIGHT",words:["STAR","LIGHT","TAR","SIT","LAG","STAIR","TAIL"]},{letters:"HOMEMADE",words:["HOME","MADE","DOME","HAM","MAD","DAME","MEAD"]},{letters:"SUNSHINE",words:["SUN","SHINE","SHIN","HIS","IN","HUES","SINE"]},{letters:"RAINBOW",words:["RAIN","BOW","RAW","WIN","NOW","WARN","BROW"]},{letters:"PLAYTIME",words:["PLAY","TIME","LAY","PAY","TAP","LIMP","MEAL"]},{letters:"CATDOG",words:["CAT","DOG","GOT","TAG","COD","ACT","DOT"]},{letters:"SANDBOX",words:["SAND","BOX","AND","SOB","SAD","BAND","NOD"]},{letters:"TREEMAP",words:["TREE","MAP","TAP","RAM","EAT","TAME","PARE"]},{letters:"FISHPOND",words:["FISH","POND","PIN","FIN","HOP","SHIP","SPIN"]},{letters:"BIRDNEST",words:["BIRD","NEST","BED","TIN","SIT","RIDE","BEST"]},{letters:"SKYBLUE",words:["SKY","BLUE","USE","LUB","KEY","BULK","SKEY"]},{letters:"REDGREEN",words:["RED","GREEN","END","ERE","DEN","NEED","GENE"]},{letters:"HOTCOLD",words:["HOT","COLD","OLD","COD","LOT","HOLD","TOLD"]},{letters:"DAYNIGHT",words:["DAY","NIGHT","HAY","TAN","GIN","THING","TINY"]},{letters:"BOOKPEN",words:["BOOK","PEN","BOK","POE","NOB","POKE","BONE"]},{letters:"CARBOAT",words:["CAR","BOAT","BAR","COT","TAB","COAT","BOAR"]},{letters:"FARMLAND",words:["FARM","LAND","ARM","LAD","DAM","DRAMA","MARL"]},{letters:"SEAWAVE",words:["SEA","WAVE","SAW","WAS","AVE","EASE","WEAVE"]},{letters:"MOONSTAR",words:["MOON","STAR","TAN","SON","RAM","ROAM","STORM"]},{letters:"WINDRAIN",words:["WIND","RAIN","WIN","AID","DIN","DRAIN","WAND"]}],medium:[{letters:"WORKPLACE",words:["WORK","PLACE","PACE","WALK","WEAR","LAP"]},{letters:"BOOKSHELF",words:["BOOK","SHELF","SELF","SHOE","FOLK","HOLE"]},{letters:"MOUNTAIN",words:["MOUNT","MAIN","MINT","AUNT","TAIL"]},{letters:"KEYBOARD",words:["BOARD","BREAK","BARK","DARK","ROAD"]},{letters:"SUNFLOWER",words:["FLOWER","FLOWS","LOWER","WOLF","SOLE"]},{letters:"STARDUST",words:["STAR","DUST","TRUST","DART","STUD"]},{letters:"RAINBOW",words:["BRAIN","WARN","RAIN","BORN","WIRE"]},{letters:"MOONLIGHT",words:["LIGHT","MOON","NIGHT","MINT","LION"]},{letters:"FIREWORK",words:["FIRE","WORK","WIRE","FORK","WORE"]},{letters:"SNOWFLAKE",words:["SNOW","FLAKE","WAKE","FAKE","LAKE"]},{letters:"BUTTERFLY",words:["BUTTER","FLUTTER","TRULY","FRUIT","BELT"]},{letters:"ELEPHANT",words:["PLANT","HELP","LEAP","PANT","TALE"]},{letters:"DIAMOND",words:["DOMAIN","MAID","MIND","DAMN","DIME"]},{letters:"TREASURE",words:["SURE","TEARS","RESET","STARE","REST"]},{letters:"PAINTING",words:["PAINT","GAIN","PAIN","PING","TAIL"]},{letters:"CHOCOLATE",words:["LATE","COAL","CHAT","HEAT","COLA"]},{letters:"UNIVERSE",words:["VERSE","SURE","USER","RISE","VINE"]},{letters:"ADVENTURE",words:["VENTURE","NATURE","TRADE","TREND","DARE"]},{letters:"SYMPHONY",words:["HYMN","PHONE","SPIN","HONEY","SHOP"]},{letters:"PARADISE",words:["RAISE","SPARE","PAID","PAIR","DEAR"]}],hard:[{letters:"SPACECRAFT",words:["SPACE","CRAFT","RACE","FACE","PACE","CARE","ACE"]},{letters:"BREAKFAST",words:["BREAK","FAST","FEAST","STEAK","TAKE","BEAR"]},{letters:"CHALLENGE",words:["CHANGE","ANGEL","LANCE","HEAL","LEAN","GLEN"]},{letters:"STARDUST",words:["STARS","DUST","TRUST","DART","STUD","RUST"]},{letters:"MOONLIGHT",words:["MOON","LIGHT","NIGHT","MINT","LION","LOOM"]},{letters:"FIREWORK",words:["FIRE","WORK","WIRE","FORK","WORE","FLOW"]},{letters:"SNOWFLAKE",words:["SNOW","FLAKE","WAKE","FAKE","LAKE","WEAK"]},{letters:"BUTTERFLY",words:["BUTTER","FLY","TRULY","FRUIT","BELT","RUBY"]},{letters:"ELEPHANT",words:["PLANT","HELP","LEAP","PANT","TALE","PLEA"]},{letters:"DIAMOND",words:["DOMAIN","MAID","MIND","DAMN","DIME","AIM"]},{letters:"TREASURE",words:["SURE","TEARS","RESET","STARE","REST","SEAT"]},{letters:"PAINTING",words:["PAINT","GAIN","PAIN","PING","TAIL","TRAP"]},{letters:"CHOCOLATE",words:["LATE","COAL","CHAT","HEAT","COLA","HOLE"]},{letters:"UNIVERSE",words:["VERSE","SURE","USER","RISE","VINE","SUN"]},{letters:"ADVENTURE",words:["VENTURE","NATURE","TRADE","TREND","DARE"]},{letters:"SYMPHONY",words:["HYMN","PHONE","SPIN","HONEY","SHOP","SPY"]},{letters:"PARADISE",words:["RAISE","SPARE","PAID","PAIR","DEAR","RAID"]},{letters:"WATERFALL",words:["WATER","FALL","WEAR","TEAR","WALL","FEAR"]},{letters:"MOUNTAIN",words:["MOUNT","MAIN","MINT","AUNT","TAIL","AIM"]},{letters:"RAINBOW",words:["RAIN","BOW","WARN","BORN","WIRE","RAW"]}]},this.currentPuzzle=null,this.foundWords=new Set,this.currentDifficulty="easy",this.score=0,this.difficultyTimes={easy:60,medium:120,hard:180},this.timeLeft=this.difficultyTimes.easy,this.timerId=null,this.streakCount=0,this.hintsUsed=0}setDifficulty(t){return this.wordSets[t]?(this.currentDifficulty=t,this.timeLeft=this.difficultyTimes[t],!0):!1}generatePuzzle(){const t=this.wordSets[this.currentDifficulty];return this.currentPuzzle=t[Math.floor(Math.random()*t.length)],this.foundWords.clear(),this.scrambleWord(this.currentPuzzle.letters)}scrambleWord(t){let r;do r=t.split("").map(e=>({char:e,sort:Math.random()})).sort((e,s)=>e.sort-s.sort).map(({char:e})=>e).join("");while(r===t);return r}canFormWord(t,r){const e={};return r.split("").forEach(s=>{e[s]=(e[s]||0)+1}),t.split("").every(s=>e[s]?(e[s]--,!0):!1)}canFormWord(t,r){const e={};return r.split("").forEach(s=>{e[s]=(e[s]||0)+1}),t.split("").every(s=>e[s]?(e[s]--,!0):!1)}generateLetterFeedback(t,r){const e=[],s=r.split(""),o=t.split(""),i={};return s.forEach(a=>{i[a]=(i[a]||0)+1}),o.forEach((a,E)=>{a===s[E]&&(e[E]="correct",i[a]--)}),o.forEach((a,E)=>{e[E]||(i[a]>0?(e[E]="present",i[a]--):e[E]="absent")}),e}checkAnswer(t){const r=t.trim().toUpperCase(),e=this.currentPuzzle.letters,s=!this.foundWords.has(r),o=r.length>=3,i=this.canFormWord(r,e),a=this.generateLetterFeedback(r,e);if(s&&o&&i){this.foundWords.add(r),this.streakCount++,this.score+=this.calculatePoints(r);const E=!this.currentPuzzle.words.includes(r),S=this.currentPuzzle.words.every(O=>this.foundWords.has(O));return{correct:!0,points:this.calculatePoints(r)+(E?5:0),streak:this.streakCount,foundWords:Array.from(this.foundWords),totalWords:this.currentPuzzle.words.length,completed:S,isBonus:E,letterFeedback:a,clearInput:!0}}else return this.streakCount=0,{correct:!1,points:0,streak:0,foundWords:Array.from(this.foundWords),totalWords:this.currentPuzzle.words.length,completed:!1,letterFeedback:a,clearInput:!1}}calculatePoints(t){const r={easy:10,medium:20,hard:30},e=t.length*2,s=Math.floor(this.streakCount/3)*5,o=Math.floor(this.timeLeft/10),i=Math.floor(this.foundWords.size/this.currentPuzzle.words.length*20);return r[this.currentDifficulty]+e+s+o+i}updateScore(){this.score+=this.calculatePoints()}getHint(){this.hintsUsed++;const t=5;this.score=Math.max(0,this.score-t);const r=this.currentPuzzle.words.filter(s=>!this.foundWords.has(s));if(r.length===0)return"All words found!";const e=r[Math.floor(Math.random()*r.length)];switch(this.currentDifficulty){case"easy":return`A ${e.length}-letter word starting with '${e[0]}'`;case"medium":return`A ${e.length}-letter word: '${e[0]}...${e[e.length-1]}'`;case"hard":return`A ${e.length}-letter word starting with '${e[0]}${e[1]}'`}}startTimer(t){this.timerId=setInterval(()=>{this.timeLeft--,typeof t=="function"&&t(this.timeLeft),this.timeLeft<=0&&this.stopTimer()},1e3)}stopTimer(){this.timerId&&(clearInterval(this.timerId),this.timerId=null)}getGameState(){return{score:this.score,timeLeft:this.timeLeft,difficulty:this.currentDifficulty,streak:this.streakCount,hintsUsed:this.hintsUsed,foundWords:Array.from(this.foundWords),totalWords:this.currentPuzzle?this.currentPuzzle.words.length:0,letters:this.currentPuzzle?this.currentPuzzle.letters:""}}resetGame(){this.score=0,this.timeLeft=this.difficultyTimes[this.currentDifficulty],this.streakCount=0,this.hintsUsed=0,this.keyboardState={},this.stopTimer()}getDailyPuzzle(){const t=new Date().toLocaleDateString();if(this.dailyPuzzle&&this.lastPlayedDate===t)return this.dailyPuzzle;const r=Object.values(this.wordSets).flat(),e=t.split("/").reduce((s,o)=>s+parseInt(o),0);return this.dailyPuzzle=r[e%r.length],this.lastPlayedDate=t,this.dailyPuzzle}updateKeyboardState(t,r){return t.split("").forEach((e,s)=>{const o=this.keyboardState[e],i=r[s];(!o||o==="absent"&&i!=="absent"||o==="present"&&i==="correct")&&(this.keyboardState[e]=i)}),this.keyboardState}};window.WordPuzzleEngine=D;const d=new WordPuzzleEngine,c=document.getElementById("puzzle-display"),l=document.getElementById("user-input"),P=document.getElementById("score"),A=document.getElementById("timer"),w=document.getElementById("streak"),y=document.getElementById("difficulty-select"),u=document.getElementById("start-btn"),T=document.getElementById("end-btn");T.style.display="none";const p=document.getElementById("clear-btn");p.addEventListener("click",()=>{l.value="",l.focus()});const h=document.createElement("div");h.id="found-words";h.className="found-words";document.querySelector(".game-container").appendChild(h);function N(){const n=d.getGameState();P.textContent=n.score;const t=Math.floor(n.timeLeft/60),r=n.timeLeft%60;A.textContent=`${t}:${r.toString().padStart(2,"0")}`,A.classList.remove("warning","danger"),n.timeLeft<=30?A.classList.add("danger"):n.timeLeft<=60&&A.classList.add("warning"),w.textContent=n.streak,m(n.foundWords)}function m(n){h.innerHTML=`
        <h3>Found Words: ${n.length}</h3>
        <div class="word-list">${n.map(t=>`<span class="found-word">${t}</span>`).join(" ")}</div>
    `}function f(){const n=d.generatePuzzle();c.innerHTML="",n.split("").forEach(t=>{const r=document.createElement("div");r.className="letter-tile",r.textContent=t,r.addEventListener("click",()=>{if(!l.disabled){const e=l.selectionStart,s=l.value;l.value=s.slice(0,e)+t+s.slice(e),l.focus(),l.setSelectionRange(e+1,e+1)}}),c.appendChild(r)}),l.value="",N(),m([])}function L(){const n=d.checkAnswer(l.value);if(n.correct){c.classList.add("correct"),setTimeout(()=>{c.classList.remove("correct"),n.completed&&f()},500),n.clearInput&&(l.value="",l.focus());const t=document.createElement("div");t.className="points-animation",t.textContent=`+${n.points}`,c.appendChild(t),setTimeout(()=>t.remove(),1e3)}else c.classList.add("error"),setTimeout(()=>c.classList.remove("error"),500);N()}function W(){const n=d.getGameState(),t=`Game Over!

Final Score: ${n.score}
Streak Bonus: ${n.streak}
Hints Used: ${n.hintsUsed}`;alert(t);const r=document.createElement("button");r.textContent="Restart Game",r.className="restart-btn",r.onclick=()=>{r.remove(),u.click()},c.appendChild(r)}document.getElementById("submit-btn").addEventListener("click",L);l.addEventListener("keypress",n=>{n.key==="Enter"&&L()});document.getElementById("hint-btn").addEventListener("click",()=>{const n=d.getHint();alert(`Hint: ${n}`),N()});y.addEventListener("change",n=>{d.setDifficulty(n.target.value),f()});let R=!1;u.addEventListener("click",()=>{R||(R=!0,u.style.display="none",T.style.display="inline-block",l.disabled=!1,d.timeLeft=120,f(),d.startTimer(()=>{const n=Math.floor(d.timeLeft/60),t=d.timeLeft%60;A.textContent=`${n}:${t.toString().padStart(2,"0")}`,d.timeLeft<=0&&I()}))});T.addEventListener("click",()=>{I()});function I(){R=!1,u.style.display="inline-block",T.style.display="none",l.disabled=!0,d.stopTimer(),W(),c.innerHTML='<div class="game-message">Click Start to play!</div>'}l.disabled=!0;c.innerHTML='<div class="game-message">Click Start to play!</div>';c.style.display="block";
